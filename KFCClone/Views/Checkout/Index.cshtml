@model KFCClone.DTOs.Checkout.CheckoutDto

@{
    ViewData["Title"] = "Checkout";
}

<head>
    <style>
        .user-guest-email,
        .user-details-fields {
            display: flex;
            flex-direction: column;
            gap: 2em;
            width: 70%;
            margin-top: 2em;
            padding: 2em 0;
        }

        .user-details-fields {
            width: 100%;
            flex-direction: row;
            flex-wrap: wrap;
            align-items: center;
            justify-content: center;
        }

        .user-details-fields>* {
            width: calc(50% - 2em);
        }

        .user-details-fields>#address {
            width: calc(100% - 2em);
        }

        .user-details-fields>select {
            width: calc(33% - 2em);
        }

        .logged-in {
            padding: 1em 0;
            margin: 0;
        }

        .checkout-name-email-container~#phone_number {
            width: calc(100% - 2em);
        }
    </style>
</head>

<div class="checkout-container">
    <h2>Checkout</h2>
    <div class="checkout-content">
        <div class="user-info-section">
            @if (@User.Identity!.IsAuthenticated)
            {
                <form class="user-details-fields logged-in">
                    <div class="checkout-name-email-container">
                        <span class="checkout-name" id="checkout-name">
                            @User.Identity!.Name!.Split(' ')[0] @User.Identity!.Name!.Split(' ')[1]
                        </span>
                        <span id="checkout-email">
                            @Model.UserDetails.Email
                        </span>
                    </div>

                    <input asp-for='UserDetails.ContactNumber' class="input-field" autocomplete="mobile" type="text"
                    name="phone_number" id="phone_number" placeholder="Phone Number">

                    <textarea asp-for='UserDetails.Address' class="input-field" autocomplete="address-level1" type="text"
                    name="address" id="address" placeholder="Address" cols="20" rows="5"></textarea>

                    <select asp-for='UserDetails.CountryId' class="input-field" name="country" id="country"
                    asp-items="Model.UserDetails.Countries">
                        <option disabled selected>Country</option>
                    </select>
                    <select class="input-field" name="state" id="state" asp-for="UserDetails.StateId"
                    asp-items="Model.UserDetails.States">
                        <option disabled selected>State</option>
                    </select>
                    <select class="input-field" name="city" id="City" asp-for="UserDetails.CityId"
                    asp-items="Model.UserDetails.Cities">
                        <option disabled selected>City</option>
                    </select>

                    <div class="payment-container">
                        <h4>Payment Method</h4>
                        <label class="payment-method">Cash on Delivery
                            <input type="radio" checked='checked' name="payment_method" id="cash_on_delivery"
                            value="CashOnDelivery">
                            <span class="radio-btn"></span>
                        </label>
                        <label class="payment-method">Credit Card
                            <input type="radio" name="payment_method" id="credit_card" value="CreditCard">
                            <span class="radio-btn"></span>
                        </label>
                        <label class="payment-method">Debit Card
                            <input type="radio" name="payment_method" id="debit_card" value="DebitCard">
                            <span class="radio-btn"></span>
                        </label>
                    </div>
                </form>
            }
            else
            {
                <div class="login-type-selector">
                    <span id="login" class="active">Login</span>
                    <span id="guest_user">Guest User</span>
                </div>
                @* @if (ViewBag.IsGuestUser ?? false) *@
                @* { *@
                <form class="user-details-fields">

                    <input asp-for="UserDetails.Email" class="input-field" autocomplete="email" type="email" name="email"
                    id="email" placeholder="Email Address">

                    <input asp-for='UserDetails.ContactNumber' class="input-field" autocomplete="mobile" type="text"
                    name="phone_number" id="phone_number" placeholder="Phone Number">

                    <input asp-for='UserDetails.FirstName' class="input-field" type="text" id="first_name" name="first_name"
                    placeholder="First Name" />
                    <input asp-for='UserDetails.LastName' class="input-field" type="text" id="last_name" name="last_name"
                    placeholder="Last Name" />


                    <textarea asp-for='UserDetails.Address' class="input-field" autocomplete="address-level1" type="text"
                    name="address" id="address" placeholder="Address" cols="20" rows="5"></textarea>

                    <select asp-for='UserDetails.CountryId' class="input-field" name="country" id="country"
                    asp-items="Model.UserDetails.Countries">
                        <option disabled selected>Country</option>
                    </select>
                    <select class="input-field" name="state" id="state" asp-for="UserDetails.StateId"
                    asp-items="Model.UserDetails.States">
                        <option disabled selected>State</option>
                    </select>
                    <select class="input-field" name="city" id="City" asp-for="UserDetails.CityId"
                    asp-items="Model.UserDetails.Cities">
                        <option disabled selected>City</option>
                    </select>

                    <div class="payment-container">
                        <h4>Payment Method</h4>
                        <label class="payment-method">Cash on Delivery
                            <input type="radio" checked='checked' name="payment_method" id="cash_on_delivery"
                            value="CashOnDelivery">
                            <span class="radio-btn"></span>
                        </label>
                        <label class="payment-method">Credit Card
                            <input type="radio" name="payment_method" id="credit_card" value="CreditCard">
                            <span class="radio-btn"></span>
                        </label>
                        <label class="payment-method">Debit Card
                            <input type="radio" name="payment_method" id="debit_card" value="DebitCard">
                            <span class="radio-btn"></span>
                        </label>
                    </div>
                </form>

                @await Html.PartialAsync("_LoginForm", null, new ViewDataDictionary(ViewData){{"isCheckOutForm", true}})
            }
        </div>
        <div class="cart-summary-section">
            <h3>Cart Summary</h3>

            <div class="cart-summary-total-container">
                <h3>Total</h3>
                <h3 class="cart-summary-total-price">0</h3>
            </div>
            <button id="place-order-btn" type="submit" class="primary-button">Place
                Order</button>

            @* @await Html.PartialAsync("_Checkbox", null, new ViewDataDictionary(ViewData){{"LabelText",
                "Save this information for next time"}}) *@

        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        var formatter = new Intl.NumberFormat(undefined, {
            style: 'currency',
            currency: 'PKR',
            maximumFractionDigits: 0
        });

        function calculateItemAddOnsTotalAmount(item) {
            return item.drinks.reduce((a, b) => a + parseInt(b.addonPrice) * parseInt(b.addonCount), 0) +
                item.addOns.reduce((a, b) => a + parseInt(b.addonPrice) * parseInt(b.addonCount), 0) +
                item.upsize.reduce((a, b) => a + parseInt(b.addonPrice) * parseInt(b.addonCount), 0)
        }

        function calculateGrandTotal() {
            var temp = 0;
            var cartItems = localStorage.getItem("cart");
            if (!cartItems) return `${formatter.format(0)}`;

            cartItems = JSON.parse(cartItems);
            for (var i = 0; i < cartItems.length; i++) {
                temp += (cartItems[i].price * cartItems[i].quantity) + calculateItemAddOnsTotalAmount(cartItems[i]);
            }
            return `${formatter.format(temp)}`;
        }

        $("#place-order-btn").click(function () {
            var cartItems = JSON.parse(localStorage.getItem("cart"));
            var tempTotal = 0;
            var cartItems = localStorage.getItem("cart");
            if (!cartItems) return 0;

            cartItems = JSON.parse(cartItems);
            for (var i = 0; i < cartItems.length; i++) {
                tempTotal += (cartItems[i].price * cartItems[i].quantity) + calculateItemAddOnsTotalAmount(cartItems[i]);
            }

            var IsGuestUser = $("#guest_user").hasClass("active");
            var checkoutDto = {
                Products: cartItems,
                UserDetails: {
                    FirstName: $('#first_name').val() || $("#checkout-name").text().trim().split(" ")[0],
                    LastName: $('#last_name').val() || $("#checkout-name").text().trim().split(" ")[1],
                    Email: $('#email').val() || $("#checkout-email").text().trim(),
                    ContactNumber: $("#phone_number").val(),
                    Address: $("#address").val(),
                    CountryId: parseInt($("#country").val()),
                    StateId: parseInt($("#state").val()),
                    CityId: parseInt($("#City").val())
                },
                PaymentType: $('input[name=payment_method]:checked').val(),
                OrderTotal: tempTotal,
                IsGuestUser
            };

            $.ajax({
                url: '/Checkout/PlaceOrder',
                type: 'POST',
                data: { checkoutDto: checkoutDto },
                success: function (data) {
                    localStorage.removeItem("cart");
                    window.location.href = '/';
                    alert("Order Placed Successfully");
                },
                error: function (data) {
                    if (data.status == 500) {
                        alert("Something went wrong. Please try again.");
                        return;
                    }
                    alert(data.responseJSON[Object.keys(data.responseJSON)[0]]);
                }
            });
        })

        $(".cart-summary-total-price").text(calculateGrandTotal());
        var cartItems = localStorage.getItem("cart");

        if (cartItems) {
            cartItems = JSON.parse(cartItems);
            var cartItemsHtml = "";

            for (var i = 0; i < cartItems.length; i++) {
                cartItemsHtml += `<div class="cart-summary-item-container">
                                    <div class="cart-summary-item-img-content">
                                        <img src="/Images/${cartItems[i].image}" alt="${cartItems[i].name}">
                                        <div class="cart-summary-item-info">
                                            <div class="cart-name-price-container">
                                                <h4 class="cart-summary-name">${cartItems[i].name}</h4>
                                                <h3 class="cart-summary-item-total-price" id="cart-item-total-${cartItems[i].id}-${cartItems[i].index}">${formatter.format((cartItems[i].price * cartItems[i].quantity) + calculateItemAddOnsTotalAmount(cartItems[i]))}</h3>
                                            </div>
                                            <p class="cart-summary-item-price" price="${cartItems[i].price}" id="cart-item-price-${cartItems[i].id}-${cartItems[i].index}">${formatter.format(cartItems[i].price)} (x${cartItems[i].quantity})</p>
                                            <p>
                                                <br>
                                                ${cartItems[i].drinks.length > 0 ? `<b>Drinks:</b> ${cartItems[i].drinks.map(addOn => `${addOn.addonName} (x${addOn.addonCount})`).join(", ")} <br>` : ''}
                                                ${cartItems[i].addOns.length > 0 ? `<b>Add Ons:</b> ${cartItems[i].addOns.map(addOn => `${addOn.addonName} (x${addOn.addonCount})`).join(", ")}` : ''}
                                                ${cartItems[i].upsize.length > 0 ? `<b>Upsize:</b> ${cartItems[i].upsize.map(addOn => `${addOn.addonName} (x${addOn.addonCount})`).join(", ")}` : ''}
                                                ${cartItems[i].friesSize.length > 0 ? `<br><b>Fries Size:</b> ${cartItems[i].friesSize.map(addOn => `${addOn.addonName} (x${addOn.addonCount})`).join(", ")}` : ''}
                                            </p>
                                        </div>

                                    </div>
                                </div>`;

            }
            $('.cart-summary-section > :first-child').after(cartItemsHtml)
        }

        if ($('.user-info-section').children()[0].classList.contains('logged-in')) {
            $('.logged-in').show();
        }
        else {
            if ($('#login').hasClass('active')) {
                $('.user-details-fields').hide();
                $('.logged-in').show();
            }
            else {
                $('.user-details-fields').show();
                $('.logged-in').hide();
                $('.login-container').hide();
            }
        }
        $('.login-type-selector span').click(function () {
            $('.login-type-selector span').removeClass('active');
            $(this).addClass('active');
            if ($(this).attr('id') !== 'login') {
                $('.login-container').hide()
                $('.user-details-fields').show();
            }
            else {
                $('.login-container').show()
                $('.user-details-fields').hide();
            }
        });

    });
</script>