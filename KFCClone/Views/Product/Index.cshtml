@model KFCClone.DTOs.Product.GetProductByIdResponseDto
@{
    ViewData["Title"] = "Product";
}

<div class="product-details-container">
    <div class="product-details-image-section">
        <img class="product-details-image" src="/Images/@Model.ProductImage" alt="@Model.ProductName">
    </div>
    <div class="product-details-content-section">
        <h2>@Model.ProductName</h2>
        <p>@Model.ProductDescription</p>
        <div class="product-details-addon-container">
            <h2>Select Drink</h2>
            @foreach (var item in Model.ProductAddOns)
            {
                if (item.AddOn.IsDrink)
                {
                    <div class="addon-row">
                        @await Html.PartialAsync("_Checkbox", null, new ViewDataDictionary(ViewData){{"LabelText",
                @item.AddOn.Name}, {"AddOnClass", "addon-name"}})
                        @* <p class="addon-name">@item.AddOn.Name</p> *@
                        <p class="addon-price">PKR @item.AddOn.Price</p>
                        @await Html.PartialAsync("_Counter")
                    </div>
                }
            }
        </div>
        <div class="product-details-addon-container">
            <h2>Add Ons</h2>
            @foreach (var item in Model.ProductAddOns)
            {
                if (!item.AddOn.IsDrink && !item.AddOn.IsUpsize)
                {
                    <div class="addon-row">
                        @await Html.PartialAsync("_Checkbox", null, new ViewDataDictionary(ViewData){{"LabelText",
                @item.AddOn.Name}, {"AddOnClass", "addon-name"}})
                        @* <p class="addon-name">@item.AddOn.Name</p> *@
                        <p class="addon-price">PKR @item.AddOn.Price</p>
                        @await Html.PartialAsync("_Counter")
                    </div>
                }
            }
        </div>
        <div class="product-details-addon-container">
            <h2>Upsize</h2>
            @foreach (var item in Model.ProductAddOns)
            {
                if (item.AddOn.IsUpsize)
                {
                    <div class="addon-row">

                        @await Html.PartialAsync("_Checkbox", null, new ViewDataDictionary(ViewData){{"LabelText",
                @item.AddOn.Name}, {"AddOnClass", "addon-name"}})
                        @* <p class="addon-name">@item.AddOn.Name</p> *@
                        <p class="addon-price">PKR @item.AddOn.Price</p>
                        @await Html.PartialAsync("_Counter")
                    </div>
                }
            }
        </div>
        <h2 class="product-details-grand-total" id="grand-total"></h2>
        <div class="product-details-footer">
            @await Html.PartialAsync("_Counter")
            <button id="addCartBtn" class="primary-button">
                Add to Cart
            </button>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        var formatter = new Intl.NumberFormat(undefined, {
            style: 'currency',
            currency: 'PKR',
            maximumFractionDigits: 0
        });

        $('#grand-total').text(formatter.format(@Model.ProductPrice));

        $('#addCartBtn').click(function () {
            var cartItems = JSON.parse(localStorage.getItem('cart'));

            if (cartItems == null) {
                cartItems = [];
            }

            cartItems.push({
                id: @Model.Id,
                name: "@Model.ProductName",
                price: @Model.ProductPrice,
                image: "@Model.ProductImage",
                index: cartItems.length,
                quantity: parseInt($('.product-details-footer #quantity').val()),
            });


            localStorage.setItem('cart', JSON.stringify(cartItems));
            $('.cart-btn').children().first().text(JSON.parse(localStorage.getItem('cart'))?.length || 0)
        })
        $(document).on("click", ".product-details-footer .minus", function () {
            var $input = $(this).parent().find('#quantity');
            var count = parseInt($input.val()) - 1;
            count = count < 1 ? 1 : count;
            $input.val(count);
    @* $('#grand-total').attr('total-price', count * $('#grand-total').attr('total-price')); *@
    @* $('#grand-total').text('PKR ' + count * $('#grand-total').text().split('PKR ')[1]); *@
                $('#grand-total').text(formatter.format(count * @Model.ProductPrice));
        })
        $(document).on("click", ".product-details-footer .add", function () {
            var $input = $(this).parent().find('#quantity');
            var count = parseInt($input.val()) + 1;
            $input.val(count);
    @* $('#grand-total').text('PKR ' + count * parseInt($('#grand-total').text().split('PKR')[1].trim())); *@
                $('#grand-total').text(formatter.format(count * @Model.ProductPrice));
        })
    })
</script>